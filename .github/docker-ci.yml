name: CI / Build / Test / Release

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'              # sproži release jobe ob pushu taga npr. v1.2.3
  pull_request:
  release:
    types: [published]    # sproži release jobe ob OBJAVI (ne samo 'created')

permissions:
  contents: write         # za objavo release assetov / branje tagov
  packages: write         # če bi kdaj potiskal na GHCR
  id-token: write         # (ni nujno, a ne škodi za moderne actione)

env:
  IMAGE_NAME: xhorizont/xdata-search

jobs:
  base:
    name: Build base image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}-base
          tags: |
            type=raw,value=latest
            type=sha,prefix=,format=long
      - name: Build & push base
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./container/Dockerfile.base
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_test:
    name: Matrix build & test
    needs: base
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py: [ "3.10", "3.11" ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-server.txt -r requirements-dev.txt
      - name: Run tests
        run: |
          pytest -q
      # (če imaš še Node/Go del, tu dodaj npm ci / go build itd.)

  release:
    name: Release to Docker Hub
    # sproži se ob tagu ali objavljenem release-u
    if: |
      startsWith(github.ref, 'refs/tags/') ||
      github.event_name == 'release'
    needs: [base, build_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # da docker/metadata-action vidi tag
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # če je push taga (v1.2.3), doda semantični tag
            type=ref,event=tag
            # vedno dodaj tudi 'latest' ob release-u na default branchu
            type=raw,value=latest,enable={{ is_default_branch }}
            # fallback: SHA tag
            type=sha,prefix=,format=long
      - name: Build & push multi-arch
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./container/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
